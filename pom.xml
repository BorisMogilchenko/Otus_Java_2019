<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>2019-03-L01.2</name>
    <description>Code of the first lesson by the 2019-03 group</description>

    <developers>
        <developer>
            <name>quazar</name>
        </developer>
    </developers>

    <groupId>ru.otus</groupId>
    <artifactId>quazar_maven</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <packagesPath>./target</packagesPath>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <com.google.guava.version>27.1-jre</com.google.guava.version>
        <my.varible>42</my.varible>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${com.google.guava.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <classpathLayoutType>simple</classpathLayoutType>
                            <mainClass>ru.otus.l01.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                    <overWriteReleases>true</overWriteReleases>
                    <overWriteSnapshots>true</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.14</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals><goal>proguard</goal></goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>6.0</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <configuration>
                    <obfuscate>true</obfuscate>
                    <outjar>2019-03-L01.2.jar</outjar>

                    <options>
                        <option>-keepdirectories</option>
                        <option>-keeppackagenames org.apache.maven.plugin.my.MyMojo</option>
                        <option>-keepnames class * implements org.apache.maven.plugin.AbstractMojo</option>
                        <option>-keepclassmembers class * implements org.apache.maven.plugin.AbstractMojo {
                            private <![CDATA[<fields>]]>;
                            private <![CDATA[<methods>]]>;
                            }
                        </option>
                        <option>-keepparameternames</option>
                        <option>-renamesourcefileattribute SourceFile</option>
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,
                            SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
                        </option>
                        <option>-target 1.8</option>
                        <option>-keep public class * {
                            public protected *;
                            }
                        </option>
                        <option>-keepclassmembernames class * {
                            java.lang.Class class$(java.lang.String);
                            java.lang.Class class$(java.lang.String, boolean);
                            }
                        </option>
                        <option>-keepclasseswithmembernames,includedescriptorclasses class * {
                            native <![CDATA[<methods>]]>;
                            }
                        </option>
                        <option>-keepclassmembers,allowoptimization enum * {
                            public static **[] values();
                            public static ** valueOf(java.lang.String);
                            }
                        </option>
                        <option>-keepclassmembers class * implements java.io.Serializable {
                            static final long serialVersionUID;
                            private static final java.io.ObjectStreamField[] serialPersistentFields;
                            private void writeObject(java.io.ObjectOutputStream);
                            private void readObject(java.io.ObjectInputStream);
                            java.lang.Object writeReplace();
                            java.lang.Object readResolve();
                            }
                        </option>
                    </options>

                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jsse.jar</lib>
                    </libs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
